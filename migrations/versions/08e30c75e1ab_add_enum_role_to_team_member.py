"""Add enum role to team_member

Revision ID: 08e30c75e1ab
Revises: c01c0c531bdb
Create Date: 2025-07-13 15:29:01.618488

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '08e30c75e1ab'
down_revision = 'c01c0c531bdb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    from sqlalchemy.dialects import postgresql

    # Create the enum type in DB
    teamrole_enum = postgresql.ENUM('developer', 'lead', name='teamrole')
    teamrole_enum.create(op.get_bind(), checkfirst=True)

    # Use CAST to convert the old column type to the enum type
    op.execute("ALTER TABLE team_member ALTER COLUMN role TYPE teamrole USING role::teamrole")
    # Set NOT NULL constraint if needed
    op.alter_column('team_member', 'role', nullable=False)
    # ### end Alembic commands ###



def downgrade():
    # Revert back to VARCHAR if downgrading
    op.alter_column('team_member', 'role', type_=sa.String(length=50))
    # Drop the enum type
    from sqlalchemy.dialects import postgresql
    postgresql.ENUM('developer', 'lead', name='teamrole').drop(op.get_bind(), checkfirst=True)

